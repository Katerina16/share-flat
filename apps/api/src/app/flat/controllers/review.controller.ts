import { Body, Controller, Get, Param, ParseIntPipe, Post, Req, UseGuards } from '@nestjs/common';import { JwtGuard } from '../../../guards/jwt.guard';import { ReviewService } from '../servises/review.service';import { ReviewEntity } from '@sf/interfaces/modules/flat/entities/review.entity';import { CreateReviewDto } from '@sf/interfaces/modules/flat/dto/create.review.dto';@Controller('review')export class ReviewController {  constructor(private readonly reviewService: ReviewService) {  }  @Get(':flatId')  find(@Param('flatId', ParseIntPipe) flatId: number): Promise<ReviewEntity[]> {    return this.reviewService.find(flatId);  }  @UseGuards(JwtGuard)  @Post()  create(@Req() req, @Body() review: CreateReviewDto): Promise<ReviewEntity> {    const {      user: { id },    } = req;    return this.reviewService.create(id, review);  }}